CREATE TABLE userDetail (
	id INTEGER NOT NULL UNIQUE,
	email VARCHAR(50) NOT NULL UNIQUE,
	firstname VARCHAR(40),
	lastname VARCHAR(60),
	PRIMARY KEY (email)
);

CREATE TABLE question (
	qid INTEGER NOT NULL UNIQUE,
	question VARCHAR(255) NOT NULL,
	publishDate DATETIME,
	PRIMARY KEY (qid)
);


CREATE TABLE answer (
	qid INTEGER NOT NULL,
	aid INTEGER NOT NULL UNIQUE,
	answer VARCHAR(255) NOT NULL,
	publishDate DATETIME,
	FOREIGN KEY (qid) REFERENCES question(qid) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (aid)
);

CREATE TABLE review (
	rid INTEGER NOT NULL UNIQUE,
	aid INTEGER NOT NULL, 
	review VARCHAR(255),
	likes INTEGER,
	dislikes INTEGER,
	FOREIGN KEY (aid) REFERENCES answer(aid) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (rid)
);

CREATE TABLE user_question (
	email VARCHAR(50) NOT NULL,
	FOREIGN KEY (email) REFERENCES userDetail (email) ON DELETE CASCADE ON UPDATE CASCADE,
	qid INTEGER NOT NULL UNIQUE,
	FOREIGN KEY (qid) REFERENCES question (qid) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (email, qid)
);

CREATE TABLE user_answer (
	email VARCHAR(50) NOT NULL,
	FOREIGN KEY (email) REFERENCES userDetail (email) ON DELETE CASCADE ON UPDATE CASCADE,
	aid INTEGER NOT NULL UNIQUE,
	FOREIGN KEY (aid) REFERENCES answer(aid) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (email, aid)
);

CREATE TABLE user_review (
	email VARCHAR(50) NOT NULL,
	FOREIGN KEY (email) REFERENCES userDetail (email) ON DELETE CASCADE ON UPDATE CASCADE,
	rid INTEGER NOT NULL UNIQUE,
	FOREIGN KEY (rid) REFERENCES review (rid) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (email, rid)
);


--the three tables that might change are review, question and answer

